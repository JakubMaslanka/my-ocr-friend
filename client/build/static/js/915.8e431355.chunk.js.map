{"version":3,"file":"static/js/915.8e431355.chunk.js","mappings":"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","sources":["components/Toast/ToastContainer.tsx","components/context/ToastContext.tsx","components/helpers/makeRequest.ts","components/pageElements/Footer.tsx","components/shared/Button.tsx","components/shared/Tooltip.tsx","components/shared/ProgressBar.tsx","components/context/ThemeContext.tsx","components/shared/ThemeToggleButton.tsx","components/pageElements/Header.tsx","components/App.tsx","components/LazyApp.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { useToast } from \"../context/ToastContext\";\r\n\r\ninterface IToast {\r\n\tid: number;\r\n\tcontent: string;\r\n\ttype: string;\r\n}\r\n\r\nconst ToastContainer: React.FC<{ toasts: IToast[] }> = ({ toasts }) =>\r\n\tcreatePortal(\r\n\t\t<div className=\"absolute m-4 right-0 top-0 z-40 overflow-hidden\">\r\n\t\t\t{toasts.map((toast: IToast) => (\r\n\t\t\t\t<Toast\r\n\t\t\t\t\tkey={toast.id}\r\n\t\t\t\t\tid={toast.id}\r\n\t\t\t\t\ttype={toast.type}\r\n\t\t\t\t\tmessage={toast.content}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>,\r\n\t\tdocument.getElementById(\"toast-root\") as HTMLDivElement\r\n\t);\r\n\r\ninterface IToastProps {\r\n\ttype: string;\r\n\tmessage: string;\r\n\tid: number;\r\n}\r\n\r\nconst Toast: React.FC<IToastProps> = ({ type, message, id }) => {\r\n\tconst [toastType, setToastType] = useState({\r\n\t\theadline: \"Success\",\r\n\t\tstyle: \"w-42 bg-green-200 border-green-400 text-green-600 border-l-4 p-4\"\r\n\t});\r\n\tconst { removeToast } = useToast();\r\n\r\n\tuseEffect(() => {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"danger\":\r\n\t\t\t\tsetToastType({\r\n\t\t\t\t\theadline: \"Danger\",\r\n\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\"w-full relative bg-yellow-200 border-yellow-600 text-yellow-600 border-l-4 p-2\"\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"success\":\r\n\t\t\t\tsetToastType({\r\n\t\t\t\t\theadline: \"Success\",\r\n\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\"w-full relative bg-green-200 border-green-600 text-green-600 border-l-4 p-2\"\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"error\":\r\n\t\t\t\tsetToastType({\r\n\t\t\t\t\theadline: \"Error\",\r\n\t\t\t\t\tstyle:\r\n\t\t\t\t\t\t\"w-full relative bg-red-200 border-red-600 text-red-600 border-l-4 p-2\"\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tconst timer = setTimeout(() => {\r\n\t\t\tremoveToast(id);\r\n\t\t}, 5000);\r\n\r\n\t\treturn () => clearTimeout(timer);\r\n\t}, [id, removeToast, type]);\r\n\r\n\treturn (\r\n\t\t<div className=\"w-80 mb-4 font-sans break-words\">\r\n\t\t\t<div className={toastType.style}>\r\n\t\t\t\t<AiOutlineClose\r\n\t\t\t\t\tonClick={() => removeToast(id)}\r\n\t\t\t\t\tclassName=\"absolute top-0 right-0 m-2 cursor-pointer\"\r\n\t\t\t\t/>\r\n\t\t\t\t<p className=\"text-xl font-bold pb-3\">{toastType.headline}</p>\r\n\t\t\t\t<p className=\"text-md\">{message}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ToastContainer;\r\n","import React, { useState, useContext, useCallback } from \"react\";\r\nimport ToastContainer from \"../Toast\";\r\n\r\ninterface IToastProvider {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\ninterface IToast {\r\n\tid: number;\r\n\tcontent: string;\r\n\ttype: string;\r\n}\r\n\r\ntype ToastContextType = {\r\n\taddToast: (content: string, type: string) => void;\r\n\tremoveToast: (id: number) => void;\r\n};\r\n\r\nlet id = 1;\r\n\r\nconst ToastContext = React.createContext<ToastContextType>({\r\n\taddToast: (c, t) =>\r\n\t\tconsole.log(`Addming toast with message: ${c} and type ${t}`),\r\n\tremoveToast: (id) => console.log(`Removing toast id: ${id}`)\r\n});\r\n\r\nconst ToastProvider: React.FC<IToastProvider> = ({ children }) => {\r\n\tconst [toasts, setToasts] = useState<IToast[]>([]);\r\n\r\n\tconst addToast = useCallback(\r\n\t\t(content: string, type: string) => {\r\n\t\t\tsetToasts((toasts) => [\r\n\t\t\t\t...toasts,\r\n\t\t\t\t{\r\n\t\t\t\t\tid: id++,\r\n\t\t\t\t\tcontent,\r\n\t\t\t\t\ttype\r\n\t\t\t\t}\r\n\t\t\t]);\r\n\t\t},\r\n\t\t[setToasts]\r\n\t);\r\n\r\n\tconst removeToast = useCallback(\r\n\t\t(id: number) => {\r\n\t\t\tsetToasts((toasts) => toasts.filter((t) => t.id !== id));\r\n\t\t},\r\n\t\t[setToasts]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ToastContext.Provider value={{ addToast, removeToast }}>\r\n\t\t\t<ToastContainer toasts={toasts} />\r\n\t\t\t{children}\r\n\t\t</ToastContext.Provider>\r\n\t);\r\n};\r\n\r\nconst useToast = () => {\r\n\tconst toastHelpers = useContext(ToastContext);\r\n\r\n\treturn toastHelpers;\r\n};\r\n\r\nexport { ToastContext, useToast };\r\nexport default ToastProvider;\r\n","import type { OCRRequestType } from \"../../types\";\r\n\r\nconst url =\r\n\tprocess.env.NODE_ENV === \"production\"\r\n\t\t? \"https://my-ocr-friend.herokuapp.com/tesseract/read-image\"\r\n\t\t: \"http://localhost:5000/tesseract/read-image\";\r\n\r\nexport const makeRequest: OCRRequestType = async (data, fallback) => {\r\n\ttry {\r\n\t\tconst response = await fetch(url, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t});\r\n\r\n\t\treturn response.json();\r\n\t} catch (error) {\r\n\t\tfallback(error as unknown);\r\n\t}\r\n};\r\n","export const Footer: React.FC = () => (\r\n\t<footer className=\"my-12 w-full\">\r\n\t\t<p className=\"max-w-3xl text-xs font-thin mx-auto dark:text-gray-400 text-gray-500 text-center pb-2 pt-1\">\r\n\t\t\t<span>The application doesn&#x27;t store user photos on the server.</span>\r\n\t\t</p>\r\n\t\t<p className=\"max-w-3xl text-xs font-thin mx-auto dark:text-gray-400 text-gray-500 text-center pb-2 pt-1\">\r\n\t\t\t<span>\r\n\t\t\t\t<a href=\"https://github.com/JakubMaslanka\">\r\n\t\t\t\t\t&copy; Jakub Maslanka {new Date(Date.now()).getFullYear()}\r\n\t\t\t\t</a>\r\n\t\t\t</span>\r\n\t\t</p>\r\n\t\t<p className=\"max-w-3xl text-xs font-thin mx-auto dark:text-gray-400 text-gray-500 text-center pb-2 pt-1\">\r\n\t\t\t<span>\r\n\t\t\t\tAPI created by <a href=\"https://github.com/thi-days\">@thi-days</a>\r\n\t\t\t</span>\r\n\t\t</p>\r\n\t</footer>\r\n);\r\n","export const Button: React.FC<{ onclick: () => void; text: string }> = ({\r\n\tonclick,\r\n\ttext\r\n}) => (\r\n\t<div className=\"flex items-center justify-center\">\r\n\t\t<button\r\n\t\t\tonClick={onclick}\r\n\t\t\tclassName=\"uppercase py-2 my-2 px-4 md:mt-16 bg-transparent dark:text-gray-800 dark:bg-white hover:dark:bg-gray-100 border-2 border-gray-800 text-gray-800 hover:bg-gray-800 hover:text-white text-md cursor-pointer\"\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t</div>\r\n);\r\n","import { useState } from \"react\";\r\n\r\nexport const Tooltip: React.FC<{\r\n\ttooltipText: string;\r\n\tchildren: JSX.Element;\r\n}> = ({ tooltipText, children, ...rest }) => {\r\n\tconst [showTooltip, setShowTooltip] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"relative cursor-default\"\r\n\t\t\tonMouseEnter={() => setShowTooltip(true)}\r\n\t\t\tonMouseLeave={() => setShowTooltip(false)}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{showTooltip && (\r\n\t\t\t\t<div className=\"absolute w-24 text-sm text-center bg-gray-600 dark:bg-gray-200 text-gray-200 dark:text-gray-900 -top-14 -left-8 p-1 border overflow-hidden border-gray-300 rounded-lg shadow-md\">\r\n\t\t\t\t\t{tooltipText}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n","export const ProgressBar: React.FC<{ progress: number }> = ({ progress }) => (\r\n\t<div>\r\n\t\t<div className=\"text-center\">\r\n\t\t\t<span className=\"text-xs font-light inline-block py-1 px-2 uppercase rounded-full text-white bg-fuchsia-400 \">\r\n\t\t\t\tConverting in progress\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className=\"w-full h-4 bg-gray-300 rounded-full mt-3\">\r\n\t\t\t<div\r\n\t\t\t\tstyle={{ width: `${progress}%` }}\r\n\t\t\t\tclassName=\"h-full text-center text-xs text-white bg-fuchsia-400 rounded-full\"\r\n\t\t\t>\r\n\t\t\t\t{progress}%\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n","import React, { useContext } from \"react\";\r\n\r\ninterface IThemeProvider {\r\n\tinitialTheme: string;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\ntype ThemeContextType = {\r\n\ttheme: string;\r\n\tsetTheme: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst getInitialTheme = (): string => {\r\n\tif (typeof window !== \"undefined\" && window.localStorage) {\r\n\t\tconst storedPrefs = window.localStorage.getItem(\"color-theme\");\r\n\t\tif (typeof storedPrefs === \"string\") {\r\n\t\t\treturn storedPrefs;\r\n\t\t}\r\n\r\n\t\tconst userMedia = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\t\tif (userMedia.matches) {\r\n\t\t\treturn \"dark\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn \"light\";\r\n};\r\n\r\nconst ThemeContext = React.createContext<ThemeContextType>({\r\n\ttheme: \"light\",\r\n\tsetTheme: () => console.log(\"test\")\r\n});\r\n\r\nconst ThemeProvider: React.FC<IThemeProvider> = ({\r\n\tinitialTheme,\r\n\tchildren\r\n}) => {\r\n\tconst [theme, setTheme] = React.useState(getInitialTheme);\r\n\r\n\tconst rawSetTheme = (rawTheme: string) => {\r\n\t\tconst root = window.document.documentElement;\r\n\t\tconst isDark = rawTheme === \"dark\";\r\n\r\n\t\troot.classList.remove(isDark ? \"light\" : \"dark\");\r\n\t\troot.classList.add(rawTheme);\r\n\r\n\t\tlocalStorage.setItem(\"color-theme\", rawTheme);\r\n\t};\r\n\r\n\tif (initialTheme) {\r\n\t\trawSetTheme(initialTheme);\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\trawSetTheme(theme);\r\n\t}, [theme]);\r\n\r\n\treturn (\r\n\t\t<ThemeContext.Provider value={{ theme, setTheme }}>\r\n\t\t\t{children}\r\n\t\t</ThemeContext.Provider>\r\n\t);\r\n};\r\n\r\nconst useTheme = () => {\r\n\tconst themeHelpers = useContext(ThemeContext);\r\n\r\n\treturn themeHelpers;\r\n};\r\n\r\nexport { ThemeContext, useTheme };\r\nexport default ThemeProvider;\r\n","import { FaSun, FaMoon } from \"react-icons/fa\";\r\nimport { useTheme } from \"../context/ThemeContext\";\r\n\r\nexport const ThemeToggleButton = () => {\r\n\tconst { theme, setTheme } = useTheme();\r\n\r\n\treturn (\r\n\t\t<div className=\"transition duration-500 ease-in-out rounded-full p-2\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"flex cursor-pointer\"\r\n\t\t\t\tonClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"relative inline-block w-10 mr-2 align-middle select-none\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n\t\t\t\t\t\tchecked={theme === \"dark\"}\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"toggle\"\r\n\t\t\t\t\t\tid=\"Blue\"\r\n\t\t\t\t\t\tclassName=\"checked:bg-fuchsia-400 outline-none focus:outline-none right-4 checked:right-0 duration-200 ease-in absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\tonClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n\t\t\t\t\t\thtmlFor=\"Blue\"\r\n\t\t\t\t\t\tclassName=\"block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer\"\r\n\t\t\t\t\t></label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span className=\"text-gray-400 font-medium\">\r\n\t\t\t\t\t<div className=\"text-gray-500 dark:text-gray-400 text-2xl cursor-pointer\">\r\n\t\t\t\t\t\t{theme === \"dark\" ? <FaSun /> : <FaMoon />}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { BsChatText } from \"react-icons/bs\";\r\nimport { ThemeToggleButton } from \"../shared\";\r\n\r\nexport const Header: React.FC = () => (\r\n\t<header className=\"h-24 sm:h-32 flex items-center z-30 w-full\">\r\n\t\t<div className=\"container mx-auto px-6 flex items-center justify-between\">\r\n\t\t\t<div className=\"uppercase text-gray-800 dark:text-white font-black text-3xl flex items-center\">\r\n\t\t\t\t<BsChatText size={\"32px\"} color=\"#E879F9\" />\r\n\t\t\t\t<span className=\"text-xs ml-3 mt-1\">MY-OCR-FRIEND</span>\r\n\t\t\t</div>\r\n\t\t\t<ThemeToggleButton />\r\n\t\t</div>\r\n\t</header>\r\n);\r\n","import { useEffect, useReducer, useRef } from \"react\";\n\nimport { IoMdCopy } from \"react-icons/io\";\nimport { MdOutlineTranslate } from \"react-icons/md\";\n\nimport { useToast } from \"./context/ToastContext\";\nimport { makeRequest } from \"./helpers/makeRequest\";\nimport { Footer, Header } from \"./pageElements\";\nimport { Button, ProgressBar, Tooltip } from \"./shared\";\n\nimport type { StateType, ActionType } from \"../types\";\n\nfunction reducer(state: StateType, action: ActionType): StateType {\n\tswitch (action.type) {\n\t\tcase \"request\":\n\t\t\treturn { ...state, isConverting: true };\n\t\tcase \"progressIncrease\":\n\t\t\treturn { ...state, convertingProgress: action.percent };\n\t\tcase \"success\":\n\t\t\treturn {\n\t\t\t\tisConverting: false,\n\t\t\t\tconvertingProgress: 100,\n\t\t\t\tocrText: action.result\n\t\t\t};\n\t\tcase \"reset\":\n\t\t\treturn { isConverting: false, convertingProgress: 0, ocrText: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction App() {\n\tconst initialState = {\n\t\tisConverting: false,\n\t\tconvertingProgress: 0,\n\t\tocrText: null\n\t};\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\n\tconst intervalID = useRef(undefined) as React.MutableRefObject<\n\t\tnumber | undefined\n\t>;\n\tconst editableDiv = useRef(\n\t\tnull\n\t) as React.MutableRefObject<HTMLDivElement | null>;\n\n\tconst { ocrText, isConverting, convertingProgress } = state;\n\tconst { addToast } = useToast();\n\n\tconst handleConvert = () => {\n\t\tif (!editableDiv.current!.hasChildNodes()) {\n\t\t\taddToast(\"There is no picture in the zone!\", \"danger\");\n\t\t\treturn;\n\t\t}\n\t\tconst imageRef = editableDiv.current!.children[0] as HTMLImageElement;\n\t\tif (!imageRef || !imageRef.src) {\n\t\t\taddToast(\"Content to convert is invalid. Change it!\", \"danger\");\n\t\t\treturn;\n\t\t}\n\t\tdispatch({ type: \"request\" });\n\n\t\tmakeRequest({ imageUrl: imageRef.src }, (error) =>\n\t\t\taddToast(`Internal server error, message: ${error}`, \"error\")\n\t\t)\n\t\t\t.then((data) => {\n\t\t\t\taddToast(\"The photo was converted correctly!\", \"success\");\n\t\t\t\tdispatch({ type: \"success\", result: data! });\n\t\t\t})\n\t\t\t.catch((err) =>\n\t\t\t\taddToast(`Something went wrong, error message: ${err}`, \"error\")\n\t\t\t);\n\t};\n\n\tconst handleReset = () => {\n\t\tif (intervalID.current !== null) clearInterval(intervalID.current);\n\t\tif (editableDiv.current!.hasChildNodes()) {\n\t\t\tArray.from(editableDiv.current!.children).forEach((child) =>\n\t\t\t\tchild.remove()\n\t\t\t);\n\t\t}\n\t\tdispatch({ type: \"reset\" });\n\t};\n\n\tconst copyToClipboard = () => {\n\t\tif (ocrText) {\n\t\t\tif (!navigator.clipboard) {\n\t\t\t\taddToast(\n\t\t\t\t\t\"The result was not copied to the clipboard. Error occured.\",\n\t\t\t\t\t\"danger\"\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnavigator.clipboard\n\t\t\t\t.writeText(ocrText.result)\n\t\t\t\t.then(() => {\n\t\t\t\t\taddToast(\n\t\t\t\t\t\t\"The text was successfully copied to the clipboard!\",\n\t\t\t\t\t\t\"success\"\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\taddToast(\"Something went wrong while copying the result!\", \"error\");\n\t\t\t\t});\n\t\t} else {\n\t\t\taddToast(\"The result text is not converted yet!\", \"danger\");\n\t\t}\n\t};\n\n\tconst openTextInTranslator = () => {\n\t\tif (ocrText) {\n\t\t\twindow.open(\n\t\t\t\t`https://www.deepl.com/translator#en/pl/${encodeURIComponent(\n\t\t\t\t\tocrText.result\n\t\t\t\t)}`,\n\t\t\t\t\"_blank\"\n\t\t\t);\n\t\t} else {\n\t\t\taddToast(\"The result text is not converted yet!\", \"danger\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (isConverting) {\n\t\t\tintervalID.current = window.setInterval(\n\t\t\t\t() =>\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"progressIncrease\",\n\t\t\t\t\t\tpercent: convertingProgress < 100 ? convertingProgress + 1 : 100\n\t\t\t\t\t}),\n\t\t\t\t250\n\t\t\t);\n\t\t}\n\t\treturn () => clearInterval(intervalID.current);\n\t}, [isConverting, convertingProgress]);\n\n\treturn (\n\t\t<main className=\"dark:bg-gray-800 font-mono bg-white relative\">\n\t\t\t<Header />\n\t\t\t<section className=\"flex relative z-20 items-center\">\n\t\t\t\t<div className=\"container mx-auto px-6 flex flex-col justify-between items-center relative py-4\">\n\t\t\t\t\t<div className=\"flex flex-col\">\n\t\t\t\t\t\t<h2 className=\"max-w-3xl text-2xl md:text-3xl font-bold mx-auto dark:text-white text-gray-800 text-center py-2\">\n\t\t\t\t\t\t\t<span className=\"text-fuchsia-400\">MY-OCR-FRIEND</span> is a web\n\t\t\t\t\t\t\tapp allowing you to convert image into text.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span className=\"text-fuchsia-300\">\n\t\t\t\t\t\t\t\tTry it out, just paste image!\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</h2>\n\n\t\t\t\t\t\t<p className=\"text-lg my-8 font-medium text-center dark:text-white\">\n\t\t\t\t\t\t\tYour image needs to be on your&#x27;s clipboard!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"text-sm -mt-8 font-extralight text-center dark:text-white\">\n\t\t\t\t\t\t\tThe written text should be in English.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div className=\"my-8\">\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName=\"text-xs font-extrabold text-fuchsia-400 py-2\"\n\t\t\t\t\t\t\t\thtmlFor=\"content\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPaste image here:\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tid=\"content\"\n\t\t\t\t\t\t\t\tclassName=\"h-28 max-w-3xl mb-8 mt-0 p-4 border border-fuchsia-500 shadow-lg outline-none overflow-y-scroll\"\n\t\t\t\t\t\t\t\tcontentEditable={true}\n\t\t\t\t\t\t\t\tref={editableDiv}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{isConverting ? (\n\t\t\t\t\t\t\t<ProgressBar progress={convertingProgress} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t!ocrText && <Button onclick={handleConvert} text=\"CONVERT\" />\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{ocrText?.result && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"flex flex-row justify-between items-center\">\n\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-md font-extrabold text-fuchsia-400 pt-2\"\n\t\t\t\t\t\t\t\t\t\thtmlFor=\"content\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tResult:\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"flex flex-row gap-4\">\n\t\t\t\t\t\t\t\t\t\t<Tooltip tooltipText=\"Copy to clipboard\">\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={copyToClipboard}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 hover:bg-gray-300 transition-all duration-100 p-2 rounded-lg shadow-md cursor-pointer\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-gray-800 dark:text-gray-200\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IoMdCopy />\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t<Tooltip tooltipText=\"Translate text\">\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={openTextInTranslator}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 hover:bg-gray-300 transition-all duration-100 p-2 rounded-lg shadow-md cursor-pointer\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-gray-800 dark:text-gray-200\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MdOutlineTranslate />\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"max-w-3xl my-4 p-2 border border-fuchsia-500 shadow-lg outline-none relative\">\n\t\t\t\t\t\t\t\t\t<span className=\"font-medium text-lg text-black dark:text-white\">\n\t\t\t\t\t\t\t\t\t\t{ocrText.result}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Button onclick={handleReset} text=\"START OVER\" />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<Footer />\n\t\t</main>\n\t);\n}\n\nexport default App;\n","import App from \"./App\";\r\nimport ThemeProvider from \"./context/ThemeContext\";\r\nimport ToastProvider from \"./context/ToastContext\";\r\n\r\nconst LazyApp = () => (\r\n\t<ToastProvider>\r\n\t\t<ThemeProvider initialTheme=\"light\">\r\n\t\t\t<App />\r\n\t\t</ThemeProvider>\r\n\t</ToastProvider>\r\n);\r\n\r\nexport default LazyApp;\r\n"],"names":["Toast","type","message","id","useState","headline","style","toastType","setToastType","removeToast","useToast","useEffect","timer","setTimeout","clearTimeout","className","onClick","toasts","createPortal","map","toast","content","document","getElementById","ToastContext","React","addToast","c","t","console","log","useContext","children","setToasts","useCallback","filter","Provider","value","makeRequest","data","fallback","fetch","method","headers","body","JSON","stringify","response","json","Footer","href","Date","now","getFullYear","Button","onclick","text","Tooltip","tooltipText","rest","showTooltip","setShowTooltip","onMouseEnter","onMouseLeave","ProgressBar","progress","width","getInitialTheme","window","localStorage","storedPrefs","getItem","matchMedia","matches","ThemeContext","theme","setTheme","initialTheme","rawSetTheme","rawTheme","root","documentElement","isDark","classList","remove","add","setItem","ThemeToggleButton","onChange","checked","name","htmlFor","Header","size","color","reducer","state","action","isConverting","convertingProgress","percent","ocrText","result","useReducer","dispatch","intervalID","useRef","undefined","editableDiv","current","setInterval","clearInterval","contentEditable","ref","hasChildNodes","imageRef","src","imageUrl","error","then","catch","err","navigator","clipboard","writeText","open","encodeURIComponent","Array","from","forEach","child"],"sourceRoot":""}